









＃ 同じメールを送らない構成ならば、イベント名ではなくメールIDで管理できるが、
＃ 今回のゴーストは適当に送るのでSendMailEVENTでイベントを管理する。
＃ 今回、起動イベントを持たないメールの場合、SendMailEVENT=Backを指定するようにしている。
＃ 指定さえしておけば、現在送信済み・未起爆イベントがあるという判定で、新しいメールをださないで済む。


＃＃ 思想
＃ 本音を言えば、もっとメールを活用したい。
＃ OnClose以外でも送信したいし、
＃ 未読状態でもお代わりを送信したい。
＃ 専用イベントは自分から終了してもいいかもしれない。
＃ マイナスのメールIDを運用してみる。



＃{{{
＃＃ 受信イベント振り分け。-----------------------------------------
＃ 受信時に次のメールIDを発行する。
＃ 実装イベントの数だけ分岐を実装
＊OnMailEvent
＞MailEventBack	（SendMailEVENT）==Back
＞MailEventNone


＃}}}
＃{{{
＃＃ 受信イベント。-------------------------------------------------
＃ 使用後は SendMailEVENT=None を指定する必要がある。
＊MailEventデート
＄SendMailEVENT=None
：デートの時間だ!

＊MailEvent水族館
＄SendMailEVENT=None
：水族館の時間だ!


＃}}}
＃{{{
＃＃ 受信イベントを用意し忘れていた場合呼ばれる。-------------------
＊MailEventNone
＄SendMailEVENT=None
＞OnGhostChangedEX	（R4）==OnGhostChanged
＞OnGhostCalledEX	（R4）==OnGhostCalled
＞OnBootEX


＃}}}
＃{{{
＃＃ 処理する気がないイベントの場合戻す。---------------------------
＊MailEventBack
＄SendMailEVENT=None
：おかえり。メール、届いたんだ。


＃}}}




















